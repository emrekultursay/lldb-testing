name: Manual Submodule Update

# This workflow is triggered ONLY when you manually run it from the Actions tab.
on:
  workflow_dispatch:
    # Optional: You can add inputs here if you wanted to select a specific submodule or branch
    # inputs:
    #   submodule_name:
    #     description: 'Submodule to update'
    #     required: false
    #     default: 'all'

jobs:
  update_submodule:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main repository
        uses: actions/checkout@v4
        with:
          # IMPORTANT: Use a Personal Access Token (PAT) here for write access.
          # The built-in GITHUB_TOKEN has limited permissions for this task.
          token: ${{ secrets.REPO_PAT }}
          fetch-depth: 0
          # DO NOT enable submodules here (we handle it in the next step)
          submodules: false

      - name: Configure Git for the bot
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "github-actions-bot@users.noreply.github.com"

      - name: Force Update and Check for Changes
        id: update_and_check
        run: |
          # 1. Fetch the latest commit for ALL submodules to ensure data is available locally
          git submodule foreach git fetch

          # 2. Update the parent repo's *index* to track the submodule's remote branch HEAD.
          # This forces the change detection. The --remote flag is crucial here.
          git submodule update --remote --recursive

          # 3. Check if any submodule reference in the index is different from the committed HEAD
          if git diff --submodule=diff HEAD | grep "Subproject commit"; then
            echo "Changes detected in submodule reference."

            # 4. Add the submodule changes and commit them to the parent repo
            git add --all
            git commit -m "Auto-update public submodule reference [ci skip]"

            # Set output flag for the next step
            echo "::set-output name=changes_detected::true"
          else
            echo "No changes to the submodule reference detected."
            echo "::set-output name=changes_detected::false"
          fi

      - name: Push new submodule reference
        # Only run the push step if changes were detected
        if: steps.update_and_check.outputs.changes_detected == 'true'
        run: |
          # Authenticated push using the PAT.
          git push https://x-access-token:${{ secrets.REPO_PAT }}@github.com/${{ github.repository }} HEAD:${{ github.ref }}
