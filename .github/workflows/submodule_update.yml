name: Manual Submodule Update

on:
  schedule:
    # Runs every day at 10:00 AM PDT (7 hours behind UTC)
    # This corresponds to 17:00 UTC.
    - cron: '0 17 * * *'
  # Allows manual running from the Actions tab
  workflow_dispatch:


jobs:
  update_submodule:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main repo (Required to run Git commands)
        uses: actions/checkout@v4
        with:
          # Use the Fine-Grained PAT for push access later
          token: ${{ secrets.REPO_PAT }}
          fetch-depth: 0
          # Avoid cloning the submodule
          submodules: false

      - name: Configure Git User (Required for 'git commit')
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "github-actions-bot@users.noreply.github.com"

      - name: Check for new submodule commits and update
        id: check
        env:
          SUBMODULE_PATH: llvm-project
          SUBMODULE_BRANCH: main
        run: |
          # Since we didn't clone, we need to get it from remote URL.
          SUBMODULE_URL=$(git config -f .gitmodules submodule.${{ env.SUBMODULE_PATH }}.url)

          # 1. Get the currently committed SHA in the parent repo's index
          # (This SHA is recorded in the .gitmodules file from the checkout)
          CURRENT_SHA=$(git ls-files -s ${{ env.SUBMODULE_PATH }} | awk '{print $2}')

          # 2. Get the remote's latest SHA for the tracked branch
          #    (Uses the public URL directly without cloning the repo)
          REMOTE_SHA=$(git ls-remote "$SUBMODULE_URL" ${{ env.SUBMODULE_BRANCH }} \
                       | awk '$2 == "refs/heads/'"${{ env.SUBMODULE_BRANCH }}"'" {print $1}')

          if [ -z "$REMOTE_SHA" ]; then
            echo "Error: Could not determine the remote SHA for branch ${{ env.SUBMODULE_BRANCH }}"
            exit 1
          fi

          echo "Submodule: ${{ env.SUBMODULE_PATH }}"
          echo "Current Committed SHA: $CURRENT_SHA"
          echo "Remote Tip-of-Tree SHA: $REMOTE_SHA"

          # --- Comparison and Update Logic ---
          if [ "$CURRENT_SHA" != "$REMOTE_SHA" ]; then
            echo "::set-output name=changes_detected::true"

            # 3. Update the submodule reference in the parent's index
            #    (This command updates the index without touching the working directory)
            git update-index --add --cacheinfo 160000 "$REMOTE_SHA" "$SUBMODULE_PATH"

            # 4. Commit the change in the parent repository
            git commit -m "Auto-update submodule ${{ env.SUBMODULE_PATH }} to $REMOTE_SHA [ci skip]"
          else
            echo "::set-output name=changes_detected::false"
            echo "No changes to the submodule reference detected."
          fi

      - name: Push new submodule reference
        if: steps.check.outputs.changes_detected == 'true'
        run: |
          # Authenticated push using the PAT.
          git push https://x-access-token:${{ secrets.REPO_PAT }}@github.com/${{ github.repository }} HEAD:${{ github.ref }}
